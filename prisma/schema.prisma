// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  email     String      @unique @db.VarChar(255)
  password  String      @db.VarChar(255)
  location  String
  schedules Scheduler[] @relation("SchedulerUserId")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Session   Session[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(30)
  provider  Provider[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Provider {
  id                  Int         @id @default(autoincrement())
  name                String      @db.VarChar(255)
  email               String      @unique @db.VarChar(255)
  password            String      @db.VarChar(255)
  location            String
  availableStart      DateTime
  availableEnd        DateTime
  appointmentReceived Scheduler[] @relation("SchedulerProviderServicesId")
  categoryId          Int
  category            Category    @relation(fields: [categoryId], references: [id])
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  Session             Session[]
}

model Scheduler {
  id                Int      @id @default(autoincrement())
  userId            Int
  user              User     @relation("SchedulerUserId", fields: [userId], references: [id])
  providerServiceId Int
  serviceProvider   Provider @relation("SchedulerProviderServicesId", fields: [providerServiceId], references: [id])
  scheduleDate      DateTime
  scheduleTime      DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Session {
  id         Int       @id @default(autoincrement())
  userId     Int?
  User       User?     @relation(fields: [userId], references: [id])
  token      String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Provider   Provider? @relation(fields: [providerId], references: [id])
  providerId Int?
}
